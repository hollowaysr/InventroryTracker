// <auto-generated />
using System;
using InventoryTracker.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryTracker.Data.Migrations
{
    [DbContext(typeof(InventoryTrackerDbContext))]
    [Migration("20250524180758_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InventoryTracker.Core.Entities.CustomerList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("LedgerEndSequenceNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("ledger_end_sequence_number");

                    b.Property<long?>("LedgerEndTransactionId")
                        .HasColumnType("bigint")
                        .HasColumnName("ledger_end_transaction_id");

                    b.Property<long>("LedgerStartSequenceNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("ledger_start_sequence_number");

                    b.Property<long>("LedgerStartTransactionId")
                        .HasColumnType("bigint")
                        .HasColumnName("ledger_start_transaction_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SystemRef")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_List_Name");

                    b.HasIndex("SystemRef")
                        .HasDatabaseName("IX_List_SystemRef");

                    b.ToTable("List", (string)null);
                });

            modelBuilder.Entity("InventoryTracker.Core.Entities.RfidTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("LedgerEndSequenceNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("ledger_end_sequence_number");

                    b.Property<long?>("LedgerEndTransactionId")
                        .HasColumnType("bigint")
                        .HasColumnName("ledger_end_transaction_id");

                    b.Property<long>("LedgerStartSequenceNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("ledger_start_sequence_number");

                    b.Property<long>("LedgerStartTransactionId")
                        .HasColumnType("bigint")
                        .HasColumnName("ledger_start_transaction_id");

                    b.Property<int>("ListId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Rfid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RFID");

                    b.Property<string>("Size")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("ListId")
                        .HasDatabaseName("IX_RFID_ListId");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_RFID_Name");

                    b.HasIndex("Rfid")
                        .IsUnique()
                        .HasDatabaseName("IX_RFID_Rfid");

                    b.ToTable("RFID", (string)null);
                });

            modelBuilder.Entity("InventoryTracker.Core.Entities.RfidTag", b =>
                {
                    b.HasOne("InventoryTracker.Core.Entities.CustomerList", "CustomerList")
                        .WithMany("RfidTags")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerList");
                });

            modelBuilder.Entity("InventoryTracker.Core.Entities.CustomerList", b =>
                {
                    b.Navigation("RfidTags");
                });
#pragma warning restore 612, 618
        }
    }
}
